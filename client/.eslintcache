[{"C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\index.js":"1","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\App.js":"3","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Register\\index.js":"4","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Header\\index.js":"5","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Footer\\index.js":"6","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Login\\index.js":"7","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Home\\index.js":"8","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\utils\\mutations.js":"9","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Navigation\\index.js":"10"},{"size":302,"mtime":1675277550114,"results":"11","hashOfConfig":"12"},{"size":377,"mtime":1675277550116,"results":"13","hashOfConfig":"12"},{"size":1583,"mtime":1675460745589,"results":"14","hashOfConfig":"12"},{"size":3541,"mtime":1675458631038,"results":"15","hashOfConfig":"12"},{"size":421,"mtime":1675280200620,"results":"16","hashOfConfig":"12"},{"size":128,"mtime":1675323156234,"results":"17","hashOfConfig":"12"},{"size":2186,"mtime":1675464302186,"results":"18","hashOfConfig":"12"},{"size":1086,"mtime":1675458631037,"results":"19","hashOfConfig":"12"},{"size":1144,"mtime":1675460852924,"results":"20","hashOfConfig":"12"},{"size":1207,"mtime":1675463642737,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"15laxzs",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\index.js",[],["45","46"],"C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\App.js",[],"C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Register\\index.js",["47"],"import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REGISTER_USER } from \"../../utils/mutations\";\r\nimport { FaUser } from \"react-icons/fa\";\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [registerUser, { _error }] = useMutation(REGISTER_USER);\r\n\r\n  function handleUsernameChange(event) {\r\n    setUsername(event.target.value);\r\n  }\r\n\r\n  function handleEmailChange(event) {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  function handleConfirmPasswordChange(event) {\r\n    setConfirmPassword(event.target.value);\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    // Validate the input values and perform registration here\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // const response = await fetch('<YOUR_REGISTRATION_API_ENDPOINT>', {\r\n      //   method: 'POST',\r\n      //   headers: { 'Content-Type': 'application/json' },\r\n      //   body: JSON.stringify({\r\n      //     username,\r\n      //     email,\r\n      //     password,\r\n      //   }),\r\n      // });\r\n\r\n      // const result = await response.json();\r\n      // if (result.success) {\r\n      //   console.log(`Successfully registered user ${username}`);\r\n      //   setError('');\r\n      // } else {\r\n      //   setError(result.error);\r\n      // }\r\n      const { data } = await registerUser({\r\n        variables: { name: username, email: email, password: password },\r\n      });\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(\"Error while registering user\");\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"center\">\r\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n\r\n      <div className=\"center\">\r\n        <h1>\r\n          <FaUser /> Register\r\n        </h1>\r\n        <p>Please create an account</p>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"username\"></label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          value={username}\r\n          placeholder=\"Enter your username  \"\r\n          onChange={handleUsernameChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"email\"></label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"password\"></label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          placeholder=\"Enter your password  \"\r\n          value={password}\r\n          onChange={handlePasswordChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"confirmPassword\"></label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          placeholder=\"Confirm password\"\r\n          value={confirmPassword}\r\n          onChange={handleConfirmPasswordChange}\r\n        />\r\n      </div>\r\n      <button className=\"register-button\" type=\"submit\">\r\n        Sign Up\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Header\\index.js",[],"C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Footer\\index.js",[],"C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Login\\index.js",["48"],"C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Home\\index.js",["49"],"import React, { useState } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  const [index, setIndex] = useState(0);\r\n  const images = [\r\n    {\r\n      src: '#',\r\n      text: 'Image 1'\r\n    },\r\n    {\r\n      src: '#',\r\n      text: 'Image 2'\r\n    },\r\n    {\r\n      src: '#',\r\n      text: 'Image 3'\r\n    }\r\n  ];\r\n\r\n  const handlePrev = () => {\r\n    setIndex(index === 0 ? images.length - 1 : index - 1);\r\n  };\r\n  const handleNext = () => {\r\n    setIndex(index === images.length - 1 ? 0 : index + 1);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"center\" id=\"home\">\r\n        <div className=\"slideshow-container\">\r\n          <img src={images[index].src} style={{ filter: \"blur(8px)\" }} />\r\n          <div className=\"text-box\">\r\n            <p>{images[index].text}</p>\r\n          </div>\r\n        </div>\r\n        <button id=\"prev\" onClick={handlePrev}>Prev</button>\r\n        <button id=\"next\" onClick={handleNext}>Next</button>\r\n      </div>\r\n      <div className=\"center\"></div>\r\n      <div>\r\n        <p></p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Omarm\\OneDrive\\Desktop\\Coding HW\\effective-robot\\client\\src\\pages\\Navigation\\index.js",["50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":13,"column":26,"nodeType":"57","messageId":"58","endLine":13,"endColumn":32},{"ruleId":"55","severity":1,"message":"59","line":11,"column":23,"nodeType":"57","messageId":"58","endLine":11,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":32,"column":11,"nodeType":"62","endLine":32,"endColumn":74},{"ruleId":"55","severity":1,"message":"63","line":5,"column":22,"nodeType":"57","messageId":"58","endLine":5,"endColumn":35},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'_error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setIsLoggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]