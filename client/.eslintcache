[{"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\index.js":"1","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\App.js":"2","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\reportWebVitals.js":"3","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Register\\index.js":"4","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Header\\index.js":"5","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Home\\index.js":"6","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Footer\\index.js":"7","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Login\\index.js":"8","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\utils\\mutations.js":"9","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Navigation\\index.js":"10"},{"size":288,"mtime":1675366072227,"results":"11","hashOfConfig":"12"},{"size":1491,"mtime":1675374779939,"results":"13","hashOfConfig":"12"},{"size":364,"mtime":1675366072238,"results":"14","hashOfConfig":"12"},{"size":2943,"mtime":1675367132371,"results":"15","hashOfConfig":"12"},{"size":399,"mtime":1675366072229,"results":"16","hashOfConfig":"12"},{"size":1038,"mtime":1675367195882,"results":"17","hashOfConfig":"12"},{"size":121,"mtime":1675366072228,"results":"18","hashOfConfig":"12"},{"size":1336,"mtime":1675366072232,"results":"19","hashOfConfig":"12"},{"size":1081,"mtime":1675396849172,"results":"20","hashOfConfig":"12"},{"size":967,"mtime":1675372746682,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"z5n0y1",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\index.js",[],["46","47"],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\App.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\reportWebVitals.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Register\\index.js",["48"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { REGISTER_USER } from '../../utils/mutations'\n\nfunction Register() {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const [registerUser, { _error }] = useMutation(REGISTER_USER);\n\n  function handleUsernameChange(event) {\n    setUsername(event.target.value);\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  function handleConfirmPasswordChange(event) {\n    setConfirmPassword(event.target.value);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    // Validate the input values and perform registration here\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      // const response = await fetch('<YOUR_REGISTRATION_API_ENDPOINT>', {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({\n      //     username,\n      //     email,\n      //     password,\n      //   }),\n      // });\n\n      // const result = await response.json();\n      // if (result.success) {\n      //   console.log(`Successfully registered user ${username}`);\n      //   setError('');\n      // } else {\n      //   setError(result.error);\n      // }\n      const { data } = await registerUser({\n        variables: { name: username, email: email, password: password }\n      });\n      console.log(data);\n    } catch (error) {\n      setError('Error while registering user');\n      console.error(error);\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      <div>\n        <label htmlFor=\"username\">Username:</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          value={username}\n          onChange={handleUsernameChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={handlePasswordChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n        <input\n          type=\"password\"\n          id=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleConfirmPasswordChange}\n        />\n      </div>\n      <button type=\"submit\">Sign Up</button>\n    </form>\n  );\n}\n\nexport default Register;\n","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Header\\index.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Home\\index.js",["49"],"import React, { useState } from \"react\";\nimport \"./Home.css\";\n\nfunction Home() {\n  const [index, setIndex] = useState(0);\n  const images = [\n    {\n      src: '#',\n      text: 'Image 1'\n    },\n    {\n      src: '#',\n      text: 'Image 2'\n    },\n    {\n      src: '#',\n      text: 'Image 3'\n    }\n  ];\n\n  const handlePrev = () => {\n    setIndex(index === 0 ? images.length - 1 : index - 1);\n  };\n  const handleNext = () => {\n    setIndex(index === images.length - 1 ? 0 : index + 1);\n  };\n\n  return (\n    <section>\n      <div className=\"center\" id=\"home\">\n        <div className=\"slideshow-container\">\n          <img src={images[index].src} style={{ filter: \"blur(8px)\" }} />\n          <div className=\"text-box\">\n            <p>{images[index].text}</p>\n          </div>\n        </div>\n        <button id=\"prev\" onClick={handlePrev}>Prev</button>\n        <button id=\"next\" onClick={handleNext}>Next</button>\n      </div>\n      <div className=\"center\"></div>\n      <div>\n        <p></p>\n      </div>\n    </section>\n  );\n}\n\nexport default Home;\n","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Footer\\index.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Login\\index.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\utils\\mutations.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Navigation\\index.js",["50"],"import React from \"react\";\n\nfunction Navigation(props) {\n  const { currentTab, setCurrentTab } = props;\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  return (\n    <nav>\n      <ul className=\"flex-row mobile-view\">\n        <li className={currentTab === \"home\" ? \"mx-2 navActive\" : \"mx-2\"}>\n          <span onClick={() => setCurrentTab(\"home\")}>Home </span>\n        </li>\n        {isLoggedIn && (\n          <li className={currentTab === \"game\" ? \"mx-2 navActive\" : \"mx-2\"}>\n            <span onClick={() => setCurrentTab(\"game\")}>Game</span>\n          </li>\n        )}\n        <li className={currentTab === \"login\" ? \"mx-2 navActive\" : \"mx-2\"}>\n          <span onClick={() => setCurrentTab(\"login\")}>Login</span>\n        </li>\n        <li className={currentTab === \"register\" ? \"mx-2 navActive\" : \"mx-2\"}>\n          <span onClick={() => setCurrentTab(\"register\")}>Register</span>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":12,"column":26,"nodeType":"57","messageId":"58","endLine":12,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":32,"column":11,"nodeType":"61","endLine":32,"endColumn":74},{"ruleId":"55","severity":1,"message":"62","line":5,"column":22,"nodeType":"57","messageId":"58","endLine":5,"endColumn":35},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'_error' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setIsLoggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]