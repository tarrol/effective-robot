[{"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\index.js":"1","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\App.js":"2","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\reportWebVitals.js":"3","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Register\\index.js":"4","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Footer\\index.js":"5","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Header\\index.js":"6","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Home\\index.js":"7","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Login\\index.js":"8","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\utils\\mutations.js":"9","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Navigation\\index.js":"10","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Profile\\index.js":"11","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Game\\index.js":"12","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\utils\\queries.js":"13","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\components\\ProfileList\\index.js":"14"},{"size":288,"mtime":1675537898128,"results":"15","hashOfConfig":"16"},{"size":2045,"mtime":1675540272634,"results":"17","hashOfConfig":"16"},{"size":364,"mtime":1675537898138,"results":"18","hashOfConfig":"16"},{"size":3557,"mtime":1675555739430,"results":"19","hashOfConfig":"16"},{"size":121,"mtime":1675537898129,"results":"20","hashOfConfig":"16"},{"size":526,"mtime":1675539299321,"results":"21","hashOfConfig":"16"},{"size":1038,"mtime":1675544692857,"results":"22","hashOfConfig":"16"},{"size":2220,"mtime":1675549467951,"results":"23","hashOfConfig":"16"},{"size":1096,"mtime":1675557188858,"results":"24","hashOfConfig":"16"},{"size":1229,"mtime":1675539343136,"results":"25","hashOfConfig":"16"},{"size":6811,"mtime":1675620885041,"results":"26","hashOfConfig":"16"},{"size":1134,"mtime":1675540181653,"results":"27","hashOfConfig":"16"},{"size":918,"mtime":1675619980828,"results":"28","hashOfConfig":"16"},{"size":971,"mtime":1675621119302,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"z5n0y1",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\index.js",[],["62","63"],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\App.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\reportWebVitals.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Register\\index.js",["64"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\nimport { FaUser } from \"react-icons/fa\";\n\nfunction Register({ isLoggedIn, setIsLoggedIn, setCurrentTab }) {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const [registerUser, { _error }] = useMutation(REGISTER_USER);\n\n  function handleUsernameChange(event) {\n    setUsername(event.target.value);\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  function handleConfirmPasswordChange(event) {\n    setConfirmPassword(event.target.value);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    // Validate the input values and perform registration here\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n\n    try {\n      // const response = await fetch('<YOUR_REGISTRATION_API_ENDPOINT>', {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({\n      //     username,\n      //     email,\n      //     password,\n      //   }),\n      // });\n\n      // const result = await response.json();\n      // if (result.success) {\n      //   console.log(`Successfully registered user ${username}`);\n      //   setError('');\n      // } else {\n      //   setError(result.error);\n      // }\n      const { data } = await registerUser({\n        variables: { name: username, email: email, password: password },\n      });\n      localStorage.setItem(\"auth_token\", data.register.token);\n      setIsLoggedIn(true);\n      setCurrentTab('profile');\n    } catch (error) {\n      setError(\"Error while registering user\");\n      console.error(error);\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"center\">\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\n\n      <div className=\"center\">\n        <h1>\n          <FaUser /> Register\n        </h1>\n        <p>Please create an account</p>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"username\"></label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          value={username}\n          placeholder=\"Enter your username  \"\n          onChange={handleUsernameChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"email\"></label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          placeholder=\"Enter your email\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\"></label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          placeholder=\"Enter your password  \"\n          value={password}\n          onChange={handlePasswordChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"confirmPassword\"></label>\n        <input\n          type=\"password\"\n          id=\"confirmPassword\"\n          placeholder=\"Confirm password\"\n          value={confirmPassword}\n          onChange={handleConfirmPasswordChange}\n        />\n      </div>\n      <button className=\"register-button\" type=\"submit\">\n        Sign Up\n      </button>\n    </form>\n  );\n}\n\nexport default Register;\n","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Footer\\index.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Header\\index.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Home\\index.js",["65"],"import React, { useState } from \"react\";\nimport \"./Home.css\";\n\nfunction Home() {\n  const [index, setIndex] = useState(0);\n  const images = [\n    {\n      src: '#',\n      text: 'Image 1'\n    },\n    {\n      src: '#',\n      text: 'Image 2'\n    },\n    {\n      src: '#',\n      text: 'Image 3'\n    }\n  ];\n\n  const handlePrev = () => {\n    setIndex(index === 0 ? images.length - 1 : index - 1);\n  };\n  const handleNext = () => {\n    setIndex(index === images.length - 1 ? 0 : index + 1);\n  };\n\n  return (\n    <section>\n      <div className=\"center\" id=\"home\">\n        <div className=\"slideshow-container\">\n          <img src={images[index].src} style={{ filter: \"blur(8px)\" }} />\n          <div className=\"text-box\">\n            <p>{images[index].text}</p>\n          </div>\n        </div>\n        <button id=\"prev\" onClick={handlePrev}>Prev</button>\n        <button id=\"next\" onClick={handleNext}>Next</button>\n      </div>\n      <div className=\"center\"></div>\n      <div>\n        <p></p>\n      </div>\n    </section>\n  );\n}\n\nexport default Home;\n","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Login\\index.js",["66"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { FaSignInAlt } from \"react-icons/fa\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\n\nfunction Login({ isLoggedIn, setIsLoggedIn, setCurrentTab }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [loginUser, { data }] = useMutation(LOGIN_USER);\n\n  function handleUsernameChange(event) {\n    setUsername(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    // Validate the input values and perform authentication using the mutation\n    try {\n      const { data } = await loginUser({\n        variables: { email: username, password }\n      });\n      localStorage.setItem(\"auth_token\", data.login.token);\n      setError(\"\");\n      setSuccess(\"Login Successful!\");\n      setIsLoggedIn(true);\n      setCurrentTab('profile');\n    } catch (error) {\n      setError(\"Incorrect email or password\");\n      setSuccess(\"\");\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"center login-page\">\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\n      {success && <div style={{ color: \"green\" }}>{success}</div>}\n      <div className=\"center\">\n        <h1>\n          <FaSignInAlt /> Login\n        </h1>\n        <p>Login to continue</p>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"username\"></label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          value={username}\n          placeholder=\"Enter your email address\"\n          onChange={handleUsernameChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\"></label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          placeholder=\"Enter your password\"\n          onChange={handlePasswordChange}\n        />\n      </div>\n      <button className=\"login-button\" type=\"submit\">\n        Login\n      </button>\n    </form>\n  );\n}\n\nexport default Login;\n","C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\utils\\mutations.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Navigation\\index.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Profile\\index.js",["67","68","69","70","71","72"],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\Game\\index.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\utils\\queries.js",[],"C:\\Users\\smudg\\Desktop\\Bootcamp\\effective-robot\\client\\src\\pages\\components\\ProfileList\\index.js",["73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":26,"nodeType":"81","messageId":"82","endLine":13,"endColumn":32},{"ruleId":"83","severity":1,"message":"84","line":32,"column":11,"nodeType":"85","endLine":32,"endColumn":74},{"ruleId":"79","severity":1,"message":"86","line":11,"column":23,"nodeType":"81","messageId":"82","endLine":11,"endColumn":27},{"ruleId":"79","severity":1,"message":"87","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"88","line":23,"column":27,"nodeType":"81","messageId":"82","endLine":23,"endColumn":32},{"ruleId":"79","severity":1,"message":"89","line":24,"column":29,"nodeType":"81","messageId":"82","endLine":24,"endColumn":39},{"ruleId":"79","severity":1,"message":"90","line":25,"column":27,"nodeType":"81","messageId":"82","endLine":25,"endColumn":35},{"ruleId":"91","severity":1,"message":"92","line":29,"column":45,"nodeType":"93","messageId":"94","endLine":29,"endColumn":47},{"ruleId":"91","severity":1,"message":"95","line":71,"column":25,"nodeType":"93","messageId":"94","endLine":71,"endColumn":27},{"ruleId":"79","severity":1,"message":"96","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":22,"column":21,"nodeType":"85","endLine":22,"endColumn":71},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'_error' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'adminError' is assigned a value but never used.","'pinError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]